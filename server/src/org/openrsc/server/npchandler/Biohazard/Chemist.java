/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
//npc ID 504
package org.openrsc.server.npchandler.Biohazard;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.World;
import org.openrsc.server.npchandler.NpcHandler;



public class Chemist implements NpcHandler
 {
	public void handleNpc(final Npc npc, final Player owner) throws Exception
	{
		npc.blockedBy(owner);
		owner.setBusy(true);
		
		Quest q = owner.getQuest(38);
		Quest plagueCity = owner.getQuest(35);
		
		if(q != null) 
		{	
			if(owner.getQuest(38) != null && owner.getQuest(38).getStage() >= 6 && owner.getQuest(38).getStage() <= 7)
			{
				switch(q.getStage())
				{
					case 6:
						questStage6(npc, owner);
					break;
					case 7:
						if(owner.getInventory().countId(813) > 0)
						{
							World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Sorry, I'm afraid we're just closing now, you'll have to come back another time"}, true)
							{
								public void finished()
								{
									owner.setBusy(false);
									npc.unblock();
								}
							});
						}
						else
						{
							lostTouchPaper(npc, owner);
						}
					break;
				}
			}
			else
			{
				owner.sendMessage("The Chemist seems to be too busy to talk");
				owner.setBusy(false);
				npc.unblock();
			}	
		} 
		else
		{
			owner.sendMessage("The Chemist seems to be too busy to talk");
			owner.setBusy(false);
			npc.unblock();
		}
	}
	
	
	
	private void questStage6(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Sorry, I'm afraid we're just closing now, you'll have to come back another time"}, true)
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
				{
					public void action()
					{
						final String[] options107 = {"This can't wait, I'm carrying a plague sample that desperately needs analysis", "It's OK, I'm Elena's friend"};
						owner.setBusy(false);
						owner.sendMenu(options107);
						owner.setMenuHandler(new MenuHandler(options107) 
						{
							public void handleReply(final int option, final String reply)
							{
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView())
								{
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) 
								{
									case 0:
										plagueSampleRemove(npc, owner);
									break;
									case 1:
										amFriend(npc, owner);
									break;
								}
							}
						});
					}
				});			
			}
		});
	}
	
	private void amFriend(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Oh, well that's different then", "Must be pretty important to come all this way", "How's everyone doing there anyway?", "Wasn't there some plague scare?"})
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
				{
					public void action()
					{
						final String[] options107 = {"That's why I'm here: I need some more touch paper for this plague sample", "Who knows... I just need some touch paper for a guy called Guidor"};
						owner.setBusy(false);
						owner.sendMenu(options107);
						owner.setMenuHandler(new MenuHandler(options107) 
						{
							public void handleReply(final int option, final String reply)
							{
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView())
								{
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) 
								{
									case 0:
										plagueSampleRemove(npc, owner);
									break;
									case 1:
										touchPaperAdd(npc, owner);
									break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private void plagueSampleRemove(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"So you're the plague carrier everyones been talking about", "Well then.. I'll be confiscating that plague sample off you", "Along with those vials"})
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
				{
					public void action()
					{
						owner.getInventory().remove(809, 1);
						owner.getInventory().remove(810, 1);
						owner.getInventory().remove(811, 1);
						owner.getInventory().remove(812, 1);
						owner.sendInventory();
						owner.sendMessage("He confiscates the plague sample and vials off you");
						owner.setBusy(false);
						npc.unblock();
					}
				});
			}
		});
	}
	
	private void touchPaperAdd(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Guidor? This one's on me then, the poor guy. Sorry about the interrogation", "It's just that there's been rumours of a person travelling with a plague on them", "They're even doing spot checks in Varrock: It's a pharmeceutical disaster"})
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Oh right...So am I going to be OK carrying these three vials with me?"})
				{
					public void finished()
					{
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"With touch paper as well? You're asking for trouble", "You'd be better using my errand boys outside, give them a vial each", "They're not the most reliable people in the world", "One's a painter, one's a gambler, and one's a drunk", "Still, if you pay peanuts you'll get monkeys, right?", "And it's better than entering Varrock with half a laborotory in your napsack"})
						{
							public void finished()
							{
								World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Ok, thanks for your help, I know that Elena aprreciates it"})
								{
									public void finished()
									{
										World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Yes well don't stand around here gassing", "You'd better hurry if you want to see Guidor", "He won't be around for much longer"})
										{
											public void finished()
											{
												World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
												{
													public void action()
													{
														owner.getInventory().add(813, 1);
														owner.sendInventory();
														owner.sendMessage("He gives you the touch paper");
														owner.incQuestCompletionStage(38); //quest stage 7
														owner.setBusy(false);
														npc.unblock();
													}
												});
											}
										});
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	private void lostTouchPaper(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Sorry, I'm afraid we're just closing now, you'll have to come back another time"}, true)
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Wait, do you have another touch paper?", "I seem to have lost the last one you gave me"})
				{
					public void finished()
					{
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Sure here you go"})
						{
							public void finished()
							{
								World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
								{
									public void action()
									{
										owner.getInventory().add(813, 1);
										owner.sendInventory();
										owner.sendMessage("He gives you some more touch paper");
										owner.setBusy(false);
										npc.unblock();
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
}