/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
//npc ID 451
package org.openrsc.server.npchandler.Biohazard;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.World;
import org.openrsc.server.npchandler.NpcHandler;



public class Door_Mourner implements NpcHandler
 {
	public void handleNpc(final Npc npc, final Player owner) throws Exception
	{
		npc.blockedBy(owner);
		owner.setBusy(true);
		
		Quest q = owner.getQuest(38);
		
		if(q != null) 
		{
			if(q.finished()) 
			{
				owner.sendMessage("The Mourner seems to be too busy to talk");
				owner.setBusy(false);
				npc.unblock();
			}
			else 
			{
				if(owner.getQuest(38) != null && owner.getQuest(38).getStage() >= 3 && owner.getQuest(38).getStage() <= 5)
				{
					switch(q.getStage())
					{
						case 3:
							questStage3(npc, owner);
						break;
						case 4:
						case 5:
							questStage4(npc, owner);
						break;
					}
				}
				else
				{
					owner.sendMessage("The Mourner seems to be too busy to talk");
					owner.setBusy(false);
					npc.unblock();
				}
			}
		} 
		else
		{
			owner.sendMessage("The Mourner seems to be too busy to talk");
			owner.setBusy(false);
			npc.unblock();
		}
	}
	
	private void questStage3(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Hello", "are these the mourner quarters?"}, true) 
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Yes. Why?, What do you want?"}) 
				{
					public void finished()
					{
						World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I need to go inside"}) 
						{
							public void finished()
							{
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"They'll be busy feasting all day"}) 
								{
									public void finished()
									{
										World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Really, even with the food shortages in west ardougne"}) 
										{
											public void finished()
											{
												World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"We've no food shortage, just the civilians"}) 
												{
													public void finished()
													{
														World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
														{
															public void action()
															{
																final String[] options107 = {"Can I join the feast?", "You should be ashamed of yourself", "Well, enjoy your meal"};
																owner.setBusy(false);
																owner.sendMenu(options107);
																owner.setMenuHandler(new MenuHandler(options107) 
																{
																	public void handleReply(final int option, final String reply)
																	{
																		owner.setBusy(true);
																		for(Player informee : owner.getViewArea().getPlayersInView())
																		{
																			informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
																		}
																		switch(option) 
																		{
																			case 0:
																				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Don't be so absurd"})
																				{
																					public void finished()
																					{
																						World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"But why not?"})
																						{
																							public void finished()
																							{
																								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Because I don't like your face"})
																								{
																									public void finished()
																									{
																										owner.setBusy(false);
																										npc.unblock();
																									}
																								});
																							}
																						});
																					}
																				});
																			break;
																			case 1:
																				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"There are families here starving, you should be protecting them"})
																				{
																					public void finished()
																					{
																						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"That sounds like a lot of hard work", "I tell you what, I'll give it some consideration while I'm enjoying my stew"})
																						{
																							public void finished()
																							{
																								owner.setBusy(false);
																								npc.unblock();
																							}
																						});
																					}
																				});
																			break;
																			case 2:
																				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"We will, oh and if you get hungry...", "..there are some rotten apples around the corner - help yourself!"})
																				{
																					public void finished()
																					{
																						owner.setBusy(false);
																						npc.unblock();
																					}
																				});
																			break;
																		}
																	}
																});
															}
														});	
													}
												});
											}
										});
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	private void questStage4(final Npc npc, final Player player) 
	{
		if (player.getInventory().wielding(802)) //wield check doctor's robe
		{
			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, player, new String[] {"Thank god your here doc", "Go right on in when your ready"}, true)
			{
				public void finished()
				{
					owner.setBusy(false);
					npc.unblock();
				}
			});
		}
		else
		{
			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, player, new String[] {"Keep away from here"}, true)
			{
				public void finished()
				{
					World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Why?"})
					{
						public void finished()
						{
							World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Several mourners are ill with food poisoning", "We're waiting for a doctor"})
							{
								public void finished()
								{
									owner.setBusy(false);
									npc.unblock();
								}
							});
						}
					});
				}
			});
		}
	}
	
	
}