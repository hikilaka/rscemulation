/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
//npc ID 512
package org.openrsc.server.npchandler.Biohazard;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.logging.Logger;
import org.openrsc.server.logging.model.eventLog;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.InvItem;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.World;
import org.openrsc.server.npchandler.NpcHandler;
import org.openrsc.server.util.DataConversions;



public class King_Lathas implements NpcHandler
 {
	public void handleNpc(final Npc npc, final Player owner) throws Exception
	{
		npc.blockedBy(owner);
		owner.setBusy(true);
		
		Quest q = owner.getQuest(38);
		
		if(q != null) 
		{
			if(q.finished()) 
			{
				owner.sendMessage("King Lathas is not interested in talking");
				owner.setBusy(false);
				npc.unblock();
			}	
			else if(owner.getQuest(38) != null && owner.getQuest(38).getStage() == 10)
			{
				switch(q.getStage())
				{
					case 10:
						questStage10(npc, owner);
					break;
				}
			}
			else
			{
				owner.sendMessage("King Lathas seems to be too busy to talk");
				owner.setBusy(false);
				npc.unblock();
			}	
		} 
		else
		{
			owner.sendMessage("King Lathas seems to be too busy to talk");
			owner.setBusy(false);
			npc.unblock();
		}
	}
	
	private void questStage10(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I assume that you are the King of east Ardougne?"}, true)
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"You assume correctly, but where do you get such impertinence?"})
				{
					public void finished()
					{
						World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I get it from finding out that the plague is a hoax"})
						{
							public void finished()
							{
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"A hoax, I've never heard such a ridiculous thing..."})
								{
									public void finished()
									{
										World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I have evidence, from Guidor in Varrock"})
										{
											public void finished()
											{
												World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Ah... I see. Well then you are right about the plague", "But I did it for the good of my people"})
												{
													public void finished()
													{
														World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"When is it ever good to lie to people like that?"})
														{
															public void finished()
															{
																World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"When it protects them from a far greater danger, a fear too big to fathom"})
																{
																	public void finished()
																	{
																		World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
																		{
																			public void action()
																			{
																				final String[] options107 = {"I don't understand...", "Well I've wasted enough of my time here"};
																				owner.setBusy(false);
																				owner.sendMenu(options107);
																				owner.setMenuHandler(new MenuHandler(options107) 
																				{
																					public void handleReply(final int option, final String reply)
																					{
																						owner.setBusy(true);
																						for(Player informee : owner.getViewArea().getPlayersInView())
																						{
																							informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
																						}
																						switch(option) 
																						{
																							case 0:
																								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Their King, Tyras, Journeyed out to the West, on a voyage of discovery", "But he was captured by the Dark Lord", "The Dark Lord agreed to spare is life, but only on one condition...", "That he would drink from the chalice of eternity"})
																								{
																									public void finished()
																									{
																										World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"So what happened?"})
																										{
																											public void finished()
																											{
																												World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"The chalice corrupted him. He joined forces with the Dark Lord...", "...The embodiment of pure evil, banished all those years ago...", "And so I erected this wall, not just to protect my people", "But to protect all the people of Runescape", "Because now, with the King of West Ardougne...", "...The dark lord has an ally on the inside", "So I'm sorry that I lied about the plague", "I just hope that you can understand my reasons"})
																												{
																													public void finished()
																													{
																														World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Well at least I know now. But what can we do about it?"})
																														{
																															public void finished()
																															{
																																World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Nothing at the moment", "I'm waiting for my scouts to come back", "They will tell us how we can get through the mountains", "When this happens, can I count on your support?"})
																																{
																																	public void finished()
																																	{
																																		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Absolutely"})
																																		{
																																			public void finished()
																																			{
																																				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Thank the gods, let me give you this amulet", "Think of it as a thank you, for all that you have done", "...but know that one day it may turn red...", "...Be ready for this moment", "And to help, I give you permission to use my training area", "It's located just to the north west of Ardougne", "There you can prepare for the challenge ahead"})
																																				{
																																					public void finished()
																																					{
																																						World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Ok, there's just one thing I don't understand", "How do you know so much about King Tyras?"})
																																						{
																																							public void finished()
																																							{
																																								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"How could I not?", "He was my brother"})
																																								{
																																									public void finished()
																																									{
																																										owner.finishQuest(38);
																																										owner.sendMessage("King Lathas gives you a magic amulet");
																																										owner.sendMessage("@gre@You have gained 3 quest points!");
																																										owner.sendMessage("You have completed the Biohazard quest!");
																																										owner.incQuestExp(17, owner.getMaxStat(17) * 50 + 500);
																																										owner.sendStat(17);
																																										owner.getInventory().add(826, 1);
																																										owner.sendInventory();
																																										owner.setBusy(false);
																																										npc.unblock();
																																										Logger.log(new eventLog(owner.getUsernameHash(), owner.getAccount(), owner.getIP(), DataConversions.getTimeStamp(), "<strong>" + owner.getUsername() + "</strong>" + " has completed the <span class=\"recent_quest\">Biohazard</span> quest!"));
																																									}
																																								});
																																							}
																																						});
																																					}
																																				});
																																			}
																																		});
																																	}
																																});
																															}
																														});
																													}
																												});
																											}
																										});
																									}
																								});
																							break;
																							case 1:
																								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"No time is ever wasted, thanks for all you've done"})
																								{
																									public void finished()
																									{
																										owner.setBusy(false);
																										npc.unblock();
																									}
																								});
																							break;
																						}
																					}
																				});
																			}
																		});
																	}
																});
															}
														});
													}
												});
											}
										});
									}
								});
							}
						});
					}
				});			
			}
		});
	}
}