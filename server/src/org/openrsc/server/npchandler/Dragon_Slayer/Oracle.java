/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/

//After starting quest---Asking for map piece

package org.openrsc.server.npchandler.Dragon_Slayer;

import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.World;
import org.openrsc.server.npchandler.NpcHandler;

public class Oracle implements NpcHandler {
	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest q = owner.getQuest(17);
		if(q != null) {
			if(q.finished()) {
				knowledge(npc, owner);
			} else {
				if(q.getStage() > 0) {
					questUnderway(npc, owner);
				} else {
					knowledge(npc, owner);
				}
			}
		} else {
			knowledge(npc, owner);
		}
	}
	
	
	private final void questUnderway(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
			public void action() {
				final String[] options2 = {"I seek a piece of the map of the isle of Crandor", "Can you impart your wise knowledge to me oh oracle"};
				owner.setBusy(false);
				owner.sendMenu(options2);
				owner.setMenuHandler(new MenuHandler(options2) {
					public void handleReply(final int option, final String reply) {
						owner.setBusy(true);
						for(Player informee : owner.getViewArea().getPlayersInView()) {
							informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
						}
						switch(option) {
							case 0:
								mapPiece(npc, owner);
								break;
							case 1:
								knowledge(npc, owner);
								break;
						}
					}
				});
			}
		});
	}
	
	private void knowledge(final Npc npc, final Player owner) {
		final String[] messages4 = {"You must search from within to find your true destiny"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages4, true) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
	private void mapPiece(final Npc npc, final Player owner) {
		final String[] messages5 = {"The map's behind a door below", "But entering is rather tough", "And this is what you need to know", "You must first hold the following stuff", "First a drink used by the mage", "Next some worm string, changed to sheet", "Then a small crustacean cage", "Last a bowl that's not seen heat"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages5) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
}