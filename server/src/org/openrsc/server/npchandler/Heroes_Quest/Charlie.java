/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
//NPC ID: 261

package org.openrsc.server.npchandler.Heroes_Quest;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.World;
import org.openrsc.server.npchandler.NpcHandler;



public class Charlie implements NpcHandler 
{

	public void handleNpc(final Npc npc, final Player owner) throws Exception 
	{
	
		npc.blockedBy(owner);
		owner.setBusy(true);
		
		Quest q = owner.getQuest(20);
		Quest blackarm = owner.getQuest(51);
		Quest phoenix = owner.getQuest(52);
		
		if (q == null)
		{
			noQuestStarted(npc, owner);
		}
		else
		{
			if(q != null) 
			{
				if(blackarm != null && blackarm.finished()) 
				{
					noQuestStarted(npc, owner);
				} 
				else 
				{
					switch(q.getStage())
					{
						case 3:
							onCandleJob(npc, owner);
						break;
						case 4:
							checkKey(npc, owner);
						break;
						case 5:
							finishedCandleJob(npc, owner);
						break;
					}
				}
			} 
		} 
	}
	

	//player shouldnt be inside
	private void noQuestStarted(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Hi"}, true) 
		{
			public void finished() 
			{
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"You shouldn't be in here"}) 
				{
					public void finished()
					{
						owner.teleport(451, 686);
						owner.setBusy(false);
						npc.unblock();
					}
				});
			}
		});
	}

	
	
	private void checkKey(final Npc npc, final Player owner) 
	{
		if (owner.getInventory().countId(573) > 0)
		{
			World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Hey, I found this key", "It should give me access to that small room"}, true) 
			{
				public void finished()
				{
					World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"go test it out"}) 
					{
						public void finished()
						{
							owner.setBusy(false);
							npc.unblock();
						}
					});
				}
			});
		}
		else
		{
			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello again, you found a way through to scarface pete's mansion?"}, true) 
			{
				public void finished()
				{
					World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"No not yet"}) 
					{
						public void finished()
						{
						}
					});
				}
			});
		}
	}
	
	
	
	private void onCandleJob(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hey what are doing round here?"}, true)
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
				{
					public void action()
					{
						final String[] options107 = {"I'm looking for a gherkin", "Nothing, just looking", "Just exploring"};
						owner.setBusy(false);
						owner.sendMenu(options107);
						owner.setMenuHandler(new MenuHandler(options107) 
						{
							public void handleReply(final int option, final String reply)
							{
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView())
								{
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) 
								{
									case 0:
										World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Aha, a fellow phoenix", "What bring you to brimhaven?"})
										{
											public void finished()
											{
												World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
												{
													public void action()
													{
														final String[] options107 = {"Sun, sand and the fresh sea air", "I want to steal Scarface Pete's candlesticks"};
														owner.setBusy(false);
														owner.sendMenu(options107);
														owner.setMenuHandler(new MenuHandler(options107) 
														{
															public void handleReply(final int option, final String reply)
															{
																owner.setBusy(true);
																for(Player informee : owner.getViewArea().getPlayersInView())
																{
																	informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
																}
																switch(option) 
																{
																	case 0:
																		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Yeah, I hear ya", "It's nice weather here"})
																		{
																			public void finished()
																			{
																				owner.setBusy(false);
																				npc.unblock();
																			}
																		});
																	break;
																	case 1:
																		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Ah yes the candlesticks", "Our progress hasn't been amazing on that front", "Though we can help you a bit", "The setting up of this restaurant is the start of things", "We have a secret door out of the back of here", "It leads through the back of mr Olbor's garden", "At the other side of olbor's garden is an old side entrance", "To scarface pete's mansion", "It seems to have been blocked off from the rest of the mansion", "We can't find a way through, we're sure it must be of some use though"})
																		{
																			public void finished()
																			{
																				owner.incQuestCompletionStage(20);
																				owner.setBusy(false);
																				npc.unblock();
																			}
																		});
																	break;
																}
															}
														});
													}
												});
											}
										});
									break;
									case 1:
									case 2:
										owner.setBusy(false);
										npc.unblock();
									break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private void finishedCandleJob(final Npc npc, final Player owner)
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"you get that candlestick?"}, true) 
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"yeah I got it and gave it to Straven"})
				{
					public void finished()
					{
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"good job mate"}) {
							public void finished()
							{
								owner.setBusy(false);
								npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
		
	
}