/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
package org.openrsc.server.npchandler;

import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.World;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.model.Player;
import org.openrsc.server.npchandler.NpcHandler;
public class Luthas implements NpcHandler {

	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		if(owner.hasBananaJob()) {
			yourTask(npc, owner);
		} else {
			final String[] messages10 = {"Hello I'm Luthas, I run the banana plantation here"};
			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages10, true) {
				public void finished() {
					World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
						public void action() {
							final String[] options3 = {"Could you offer me employment on your plantation?", "That customs officer is annoying isn't she?"};
							owner.setBusy(false);
							owner.sendMenu(options3);
							owner.setMenuHandler(new MenuHandler(options3) {
								public void handleReply(final int option, final String reply) {
									owner.setBusy(true);
									for(Player informee : owner.getViewArea().getPlayersInView()) {
										informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
									}
									switch(option) {
										case 0:
											final String[] messages11 = {"Yes, I can sort something out", "Yes there's a crate outside ready for loading up on the ship", "If you could fill it up with bananas", "I'll pay you 30 gold"};
											World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages11) {
												public void finished() {
													owner.acceptBananaJob();
													owner.setBusy(false);
													npc.unblock();
												}
											});
											break;
										case 1:
											customsOfficer(npc, owner);
											break;
									}
								}
							});
						}
					});
				}
			});

		}
	}
	
	private void yourTask(final Npc npc, final Player owner) {
		final String[] messages12 = {"Have you completed your task yet?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages12, true) {
			public void finished() {
				if(owner.isJobFinished()) {
					done(npc, owner);
				} else {
					World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
						public void action() {
							final String[] options4 = {"What did I have to do again?", "No, the crate isn't full yet"};
							owner.setBusy(false);
							owner.sendMenu(options4);
							owner.setMenuHandler(new MenuHandler(options4) {
								public void handleReply(final int option, final String reply) {
									owner.setBusy(true);
									for(Player informee : owner.getViewArea().getPlayersInView()) {
										informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
									}
									switch(option) {
										case 0:
											final String[] messages13 = {"There's a crate outside ready for loading up on the ship", "If you could fill it up with bananas", "I'll pay you 30 gold"};
											World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages13) {
												public void finished() {
													owner.setBusy(false);
													npc.unblock();
												}
											});
											break;
										case 1:
											final String[] messages14 = {"Well come back when it is"};
											World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages14) {
												public void finished() {
													owner.setBusy(false);
													npc.unblock();
												}
											});
											break;
									}
								}
							});
						}
					});
				}
			}
		});
	}
	
	private void done(final Npc npc, final Player owner) {
		final String[] messages15 = {"I've filled a crate with bananas"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages15) {
			public void finished() {
				final String[] messages16 = {"Well done here is your payment"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages16) {
					public void finished() {
						owner.sendMessage("Luthas hands you 30 coins");
						owner.finishBananaJob();
						World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
							public void action() {
								final String[] options5 = {"Will you pay me for another crate full?", "Thankyou, I'll be on my way", "So where are these bananas going to be delivered to?", "That customs officer is annoying isn't she?"};
								owner.setBusy(false);
								owner.sendMenu(options5);
								owner.setMenuHandler(new MenuHandler(options5) {
									public void handleReply(final int option, final String reply) {
										owner.setBusy(true);
										for(Player informee : owner.getViewArea().getPlayersInView()) {
											informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
										}
										switch(option) {
											case 0:
												anotherCrate(npc, owner);
												break;
											case 1:
												owner.setBusy(false);
												npc.unblock();
												break;
											case 2:
												deliveredTo(npc, owner);
												break;
											case 3:
												customsOfficer(npc, owner);
												break;
										}
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	private void customsOfficer(final Npc npc, final Player owner) {
		final String[] messages17 = {"Well I know her pretty well", "She doesn't cause me any trouble anymore", "She doesn't even check my export crates anymore", "She knows they only contain bananas"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages17) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
	private void deliveredTo(final Npc npc, final Player owner) {
		final String[] messages18 = {"I sell them to Wydin who runs a grocery store in Port Sarim"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages18) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
	private void anotherCrate(final Npc npc, final Player owner) {
		final String[] messages19 = {"Yes certainly", "If you go outside you should see the old crate has been loaded on to the ship", "and there is another empty crate in its place"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages19) {
			public void finished() {
				owner.acceptBananaJob();
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
}