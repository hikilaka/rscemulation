/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
package org.openrsc.server.npchandler.Merlins_Crystal;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.World;
import org.openrsc.server.npchandler.NpcHandler;



public class Sir_Lancelot implements NpcHandler {

	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest q = owner.getQuest(22);
		if(q != null) {
			if(q.finished()) {
				finished(npc, owner);
			} else {
				switch(q.getStage()) {
					case 1:
						questStarted(npc, owner);
						break;
					case 2:
						questStage2(npc, owner);
						break;
					case 3:
						questStage3(npc, owner);
						break;
					case 4:
						questStage4(npc, owner);
						break;
					case 5:
						questStage4(npc, owner);
						break;
					case 6:
						questStage4(npc, owner);
						break;
					case 7:
						questStage4(npc, owner);
						break;
					default:
						noQuestStarted(npc, owner);
				}
			}
		} else {
			noQuestStarted(npc, owner);
		}
	}
	

	private void questStarted(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello", "Can I help you?"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options107 = {"How did Merlin get stuck in a crystal?", "No, goodbye"};
						owner.setBusy(false);
						owner.sendMenu(options107);
						owner.setMenuHandler(new MenuHandler(options107) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										quest(npc, owner);
										break;
									case 1:
										goodBye(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private void noQuestStarted(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello", "Can I help you?"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options107 = {"Can I join your order?", "No, goodbye"};
						owner.setBusy(false);
						owner.sendMenu(options107);
						owner.setMenuHandler(new MenuHandler(options107) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										speakToLeader(npc, owner);
										break;
									case 1:
										goodBye(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private void questStage2(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello there", "Did you get into Keep Le Faye and find the witch?"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options107 = {"Their defenses are too strong, can you help me?", "No, I'll try again"};
						owner.setBusy(false);
						owner.sendMenu(options107);
						owner.setMenuHandler(new MenuHandler(options107) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										info(npc, owner);
										break;
									case 1:
										goodBye(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private void questStage3(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello there", "how goes the investigation?"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Still trying to figure out how I can get on the boat"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Well keep trying, don't give up"}) {
							public void finished() {
							owner.setBusy(false);
							npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
	private void questStage4(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello there", "how goes the investigation?"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I found the witch and threatened her", "she gave me information on how to release merlin"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"good work!", "you might want to let king arthur know about this"}) {
							public void finished() {
							owner.setBusy(false);
							npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
	
	private void quest(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Well I'm pretty sure I saw a witch do it", "I think she goes by the name of Morgan Le Faye"}) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Where can I find this witch?"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"She has her own castle south from here", "I think its called Keep Le Faye", "if shes anywhere it would be there", "go check it out" }) {
							public void finished() {
							owner.incQuestCompletionStage(22);
							owner.setBusy(false);
							npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
	private void info(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Try talking to Arhein at catherby docks", "He does deliveries for the castle", "ask him if he can smuggle you there"}) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"What if he can't take me?"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Try getting on the boat another way"}) {
							public void finished() {
							owner.incQuestCompletionStage(22);
							owner.setBusy(false);
							npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
	
	private void speakToLeader(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"I would talk to king Arthur about that"}) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
	
	private void goodBye(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Farewell"}) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
	private void finished(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Thanks again for your help adventurer"}, true) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
}