/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
package org.openrsc.server.npchandler.Multi_Quest;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.InvItem;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.World;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.model.Player;
import org.openrsc.server.npchandler.NpcHandler;
public class Ned implements NpcHandler {

	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest dragonslayer = owner.getQuest(17);
		Quest ali = owner.getQuest(10);
		if(dragonslayer != null) {
			if(ali != null) {
				if(dragonslayer.getStage() == 2 && owner.ladyFixed()) {
					aliDragonStarted(npc, owner);
				} else {
					switch(ali.getStage()) {
					case 0:
						noQuestStarted(npc, owner);
						break;
					case 1:
					case 2:
						aliQuestStarted(npc, owner);
						break;
					default:
						noQuestStarted(npc, owner);
				}
				}
			} else {	//Only Dragonslayer Started
				if(dragonslayer.getStage() == 2 && owner.ladyFixed()) { //Ship Fixed
					dragonslayer(npc, owner);
				} else {
					noQuestStarted(npc, owner);
				}
			}
		} else {
			if(ali != null) {	//Only Ali Started
				switch(ali.getStage()) {
					case 0:
						noQuestStarted(npc, owner);
						break;
					case 1:
					case 2:
						aliQuestStarted(npc, owner);
						break;
					default:
						noQuestStarted(npc, owner);
				}
			} else {	//Neither Started
				noQuestStarted(npc, owner);
			}
		}
	}
	
	private void dragonslayer(final Npc npc, final Player owner) {
		final String[] messages22 = {"Why hello there, me friends call me Ned", "I was a man of the sea, but its past me now", "Could I be making or selling you some Rope?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages22, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options6 = {"You're a sailor? Could you take me to the Isle of Crandor", "Yes, I would like some Rope", "No thanks Ned, I don't need any"};
						owner.setBusy(false);
						owner.sendMenu(options6);
						owner.setMenuHandler(new MenuHandler(options6) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										if(owner.ladyFixed()) {
											crandor(npc, owner);
										} else {
											almostReadyToGo(npc, owner);
										}
										break;
									case 1:
										sellRope(npc, owner);
										break;
									case 2:
										noThanks(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private void almostReadyToGo(final Npc npc, final Player owner) {
		final String[] messages49 = {"Well I was a sailor", "I've not been able to get work at sea these days though", "They say I am too old"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages49) {
			public void finished() {
				owner.sendMessage("There is a wistfull look in Ned's eyes");
				final String[] messages50 = {"I miss those days", "If you could get me a ship I would take you anywhere"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages50) {
					public void finished() {
						final String[] messages51 = {"I will work on finding a sea worthy ship then"};
						World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages51) {
							public void finished() {
								owner.setBusy(false);
								npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
	private final void aliDragonStarted(final Npc npc, final Player owner) {
		final String[] messages22 = {"Why hello there, me friends call me Ned", "I was a man of the sea, but its past me now", "Could I be making or selling you some Rope?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages22, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options6 = {"You're a sailor? Could you take me to the Isle of Crandor", "Yes, I would like some Rope", "No thanks Ned, I don't need any", "Ned, could you make other things from wool?"};
						owner.setBusy(false);
						owner.sendMenu(options6);
						owner.setMenuHandler(new MenuHandler(options6) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										if(owner.ladyFixed()) {
											crandor(npc, owner);
										} else {
											almostReadyToGo(npc, owner);
										}
										
										break;
									case 1:
										sellRope(npc, owner);
										break;
									case 2:
										noThanks(npc, owner);
										break;
									case 3:
										otherThings(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private void crandor(final Npc npc, final Player owner) {
		final String[] messages37 = {"Well I was a sailor", "I've not been able to get work at sea these days though", "They say I am too old"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages37) {
			public void finished() {
				owner.sendMessage("There is a wistfull look in Ned's eyes");
				final String[] messages38 = {"I miss those days", "If you could get me a ship I would take you anywhere"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages38) {
					public void finished() {
						final String[] messages39 = {"As it happens I do have a ship ready to sail"};
						World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages39) {
							public void finished() {
								final String[] messages40 = {"That'd be grand, where is it"};
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages40) {
									public void finished() {
										final String[] messages41 = {"It's called the Lumbridge Lady and it's docked in Port Sarim"};
										World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages41) {
											public void finished() {
												final String[] messages42 = {"I'll go right over there and check her out then", "see you over there"};
												World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages42) {
													public void finished() {
														owner.incQuestCompletionStage(17);
														owner.setBusy(false);
														npc.unblock();
													}
												});
											}
										});
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	private final void aliQuestStarted(final Npc npc, final Player owner) {
		final String[] messages22 = {"Why hello there, me friends call me Ned", "I was a man of the sea, but its past me now", "Could I be making or selling you some Rope?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages22, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options6 = {"Yes, I would like some Rope", "No thanks Ned, I don't need any", "Ned, could you make other things from wool?"};
						owner.setBusy(false);
						owner.sendMenu(options6);
						owner.setMenuHandler(new MenuHandler(options6) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										sellRope(npc, owner);
										break;
									case 1:
										noThanks(npc, owner);
										break;
									case 2:
										otherThings(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private final void noQuestStarted(final Npc npc, final Player owner) {
		if(owner.getInventory().countId(207) > 3) {
			noQuestStartedWool(npc, owner);
		} else {
			noQuestStartedNoWool(npc, owner);
		}
	}
	
	private final void noQuestStartedWool(final Npc npc, final Player owner) {
		final String[] messages0 = {"Why hello there, me friends call me Ned", "I was a man of the sea, but its past me now", "Could I be making or selling you some Rope?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages0, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options0 = {"Yes, I would like some Rope", "No thanks Ned, I don't need any", "I have some balls of wool. could you make me some rope?"};
						owner.setBusy(false);
						owner.sendMenu(options0);
						owner.setMenuHandler(new MenuHandler(options0) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
											public void action() {
												final String[] options1 = {"Okay, please sell me some Rope", "I have some balls of wool. could you make me some Rope?", "Thats a little more than I want to pay"};
												owner.setBusy(false);
												owner.sendMenu(options1);
												owner.setMenuHandler(new MenuHandler(options1) {
													public void handleReply(final int option, final String reply) {
														owner.setBusy(true);
														for(Player informee : owner.getViewArea().getPlayersInView()) {
															informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
														}
														switch(option) {
															case 0:
																sellRope(npc, owner);
																break;
															case 1:
																makeRope(npc, owner);
																break;
															case 2:
																World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Well, if you ever need some rope. thats the price. sorry", "An old sailor needs money for a little drop o rum."}) {
																	public void finished() {
																		owner.setBusy(false);
																		npc.unblock();
																	}
																});
																break;
														}
													}
												});
											}
										});
										break;
									case 1:
										noThanks(npc, owner);
										break;
									case 2:
										makeRope(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private final void noQuestStartedNoWool(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Why hello there, me friends call me Ned", "I was a man of the sea, but its past me now", "Could I be making or selling you some Rope?"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options4 = {"Yes, I would like some Rope", "No thanks Ned, I don't need any"};
						owner.setBusy(false);
						owner.sendMenu(options4);
						owner.setMenuHandler(new MenuHandler(options4) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Well, I can sell you some rope for 15 coins", "Or I can be making you some if you gets me 4 balls of wool", "I strands them together I does, makes em strong"}) {
											public void finished() {
												World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
													public void action() {
														final String[] options5 = {"Okay, please sell me some Rope", "Thats a little more than I want to pay", "I will go and get some wool"};
														owner.setBusy(false);
														owner.sendMenu(options5);
														owner.setMenuHandler(new MenuHandler(options5) {
															public void handleReply(final int option, final String reply) {
																owner.setBusy(true);
																for(Player informee : owner.getViewArea().getPlayersInView()) {
																	informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
																}
																switch(option) {
																	case 0:
																		sellRope(npc, owner);
																		break;
																	case 1:
																		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Well, if you ever need some rope. thats the price. sorry", "An old sailor needs money for a little drop o rum."}) {
																			public void finished() {
																				owner.setBusy(false);
																				npc.unblock();
																			}
																		});
																		break;
																	case 2:
																		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Aye, you do that", "Remember, it takes 4 balls of wool to make strong rope"}) {
																			public void finished() {
																				owner.setBusy(false);
																				npc.unblock();
																			}
																		});
																		break;
																}
															}
														});
													}
												});
											}
										});
										break;
									case 1:
										noThanks(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private final void noThanks(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Well, old Neddy is always here if you do", "Tell your friends, I can always be using the business"}) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
	private final void sellRope(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
			public void action() {
				if(owner.getInventory().countId(10) < 15) {
					owner.sendMessage("You don't have enough coins to buy the rope");
					owner.setBusy(false);
					npc.unblock();
				} else {
					owner.sendMessage("You hand Ned 15 coins");
					owner.getInventory().remove(new InvItem(10, 15));
					owner.sendInventory();
					World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
						public void action() {
							World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"There you go, finest rope in Runescape"}) {
								public void finished() {
									owner.sendMessage("Ned hands you a coil of rope");
									owner.getInventory().add(new InvItem(237, 1));
									owner.sendInventory();
									owner.setBusy(false);
									npc.unblock();
								}
							});
						}
					});					
				}

			}
		});
	}
	
	private final void makeRope(final Npc npc, final Player owner) {
		final String[] messages1 = {"Sure I can."};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages1) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						owner.sendMessage("You hand over 4 balls of wool");
						owner.sendMessage("Ned gives you a coil of rope");
						owner.getInventory().remove(new InvItem(207, 1));
						owner.getInventory().remove(new InvItem(207, 1));
						owner.getInventory().remove(new InvItem(207, 1));
						owner.getInventory().remove(new InvItem(207, 1));
						owner.getInventory().add(new InvItem(237, 1));
						owner.sendInventory();
						owner.setBusy(false);
						npc.unblock();
					}
				});
			}
		});
	}

	private void arrowHole(final Npc npc, final Player owner) {
		final String[] messages23 = {"Ah yes, its a tough world these days", "Theres a few brave enough to attack from 10 metres away", "There you go, good as new"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages23) {
			public void finished() {
				final String[] messages24 = {"Thanks Ned, maybe next time they will attack me face to face"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages24) {
					public void finished() {
						owner.setBusy(false);
						npc.unblock();
					}
				});
			}
		});
	}

	private void sweater(final Npc npc, final Player owner) {
		final String[] messages25 = {"Do I look like a member of a sewing circle?", "Be off wi' you, I have fought monsters that would turn your hair blue", "I don't need to be laughed at just 'cos I am getting a bit old"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages25) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}

	private void wig(final Npc npc, final Player owner) {
		final String[] messages26 = {"Well... Thats an interesting thought", "yes, I think I could do something", "Give me 3 balls of wool and I might be able to do it"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages26) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						if(owner.getInventory().countId(207) > 2) {
							final String[] options7 = {"I have that now. Please, make me a wig", "I will come back when I need you to make me one"};
							owner.setBusy(false);
							owner.sendMenu(options7);
							owner.setMenuHandler(new MenuHandler(options7) {
								public void handleReply(final int option, final String reply) {
									owner.setBusy(true);
									for(Player informee : owner.getViewArea().getPlayersInView()) {
										informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
									}
									switch(option) {
										case 0:
											final String[] messages27 = {"Okay, I will have a go"};
											World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages27) {
												public void finished() {
													owner.sendMessage("You hand Ned 3 balls of wool");
													owner.getInventory().remove(new InvItem(207, 1));
													owner.getInventory().remove(new InvItem(207, 1));
													owner.getInventory().remove(new InvItem(207, 1));
													owner.sendInventory();
													owner.sendMessage("Ned works with the wool. His hands move with a speed you couldn't imagine");
													World.getDelayedEventHandler().add(new SingleEvent(owner, 2000) {
														public void action() {
															final String[] messages28 = {"Here you go, hows that for a quick effort? Not bad I think!"};
															World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages28) {
																public void finished() {
																	owner.sendMessage("Ned gives you a pretty good wig");
																	owner.getInventory().add(new InvItem(245, 1));
																	owner.sendInventory();
																	final String[] messages29 = {"Thanks Ned, theres more to you than meets the eye"};
																	World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages29) {
																		public void finished() {
																			owner.setBusy(false);
																			npc.unblock();
																		}
																	});
																}
															});
														}
													});
												}
											});
											break;
										case 1:
											comeBack(npc, owner);
											break;
									}
								}
							});
						} else {
								final String[] messages30 = {"great, I will get some. I think a wig would be useful"};
								World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages30) {
									public void finished() {
										owner.setBusy(false);
										npc.unblock();
									}
								});							
						}
					}
				});
			}
		});
	}

	private void comeBack(final Npc npc, final Player owner) {
		final String[] messages31 = {"Well, it sounds like a challenge", "come to me if you need one"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages31) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}

	private void otherThings(final Npc npc, final Player owner) {
		final String[] messages32 = {"I am sure I can. What are you thinking of?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages32) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options8 = {"Could you knit me a sweater?", "How about some sort of a wig?", "Could you repair the arrow holes in the back of my shirt?"};
						owner.setBusy(false);
						owner.sendMenu(options8);
						owner.setMenuHandler(new MenuHandler(options8) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										sweater(npc, owner);
										break;
									case 1:
										wig(npc, owner);
										break;
									case 2:
										arrowHole(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
}