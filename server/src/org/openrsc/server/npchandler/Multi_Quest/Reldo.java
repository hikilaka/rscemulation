/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
package org.openrsc.server.npchandler.Multi_Quest;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.World;
import org.openrsc.server.npchandler.NpcHandler;

public class Reldo implements NpcHandler {
	
	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest arrav = owner.getQuest(13);
		Quest knight = owner.getQuest(14);
		if(knight != null) {
			if(arrav != null) {
				if(knight.getStage() == 0) {
					if(arrav.getStage() == 1) {
						readBook(npc, owner);
					} else {
						knightsSwordUnderwayNoArrav(npc, owner);
					}
				} else {
					if(arrav.getStage() == 1) {
						readBook(npc, owner);
					} else {
						noQuestStarted(npc, owner);
					}
				}
			} else {
				if(knight.getStage() == 0) {	//Arrav No Start | Knight Dwarf
					knightsSwordUnderwayWithArrav(npc, owner);
				} else {
					arravNotStarted(npc, owner);
				}
			}
		} else {
			if(arrav != null) {
				if(arrav.getStage() == 1) {
					readBook(npc, owner);
				} else {
					noQuestStarted(npc, owner);
				}
			} else {
				arravNotStarted(npc, owner);
			}
		}
	}
	
	private final void arravNotStarted(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Hello"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello stranger"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
							public void action() {
								final String[] options1 = {"I'm in search of a quest", "Do you have anything to trade?", "What do you do?"};
								owner.setBusy(false);
								owner.sendMenu(options1);
								owner.setMenuHandler(new MenuHandler(options1) {
									public void handleReply(final int option, final String reply) {
										owner.setBusy(true);
										for(Player informee : owner.getViewArea().getPlayersInView()) {
											informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
										}
										switch(option) {
											case 0:
												quest(npc, owner);
												break;
											case 1:
												trade(npc, owner);
												break;
											case 2:
												whatYouDo(npc, owner);
												break;
										}
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	private final void knightsSwordUnderwayWithArrav(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Hello"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello stranger"}) {
					public void finished() {
						final String[] options0 = {"I'm in search of a quest", "Do you have anything to trade?", "What do you do?", "What do you know about the Imcando dwarves?"};
						owner.setBusy(false);
						owner.sendMenu(options0);
						owner.setMenuHandler(new MenuHandler(options0) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										quest(npc, owner);
										break;
									case 1:
										trade(npc, owner);
										break;
									case 2:
										whatYouDo(npc, owner);
										break;
									case 3:
										lookingForThurgo(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private final void knightsSwordUnderwayNoArrav(final Npc npc, final Player owner) {
		final String[] options0 = {"Do you have anything to trade?", "What do you do?", "What do you know about the Imcando dwarves?"};
		owner.setBusy(false);
		owner.sendMenu(options0);
		owner.setMenuHandler(new MenuHandler(options0) {
			public void handleReply(final int option, final String reply) {
				owner.setBusy(true);
				for(Player informee : owner.getViewArea().getPlayersInView()) {
					informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
				}
				switch(option) {
					case 0:
						trade(npc, owner);
						break;
					case 1:
						whatYouDo(npc, owner);
						break;
					case 2:
						lookingForThurgo(npc, owner);
						break;
				}
			}
		});
	}
	
	private final void noQuestStarted(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Hello"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello stranger"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
							public void action() {
								final String[] options1 = {"Do you have anything to trade?", "What do you do?"};
								owner.setBusy(false);
								owner.sendMenu(options1);
								owner.setMenuHandler(new MenuHandler(options1) {
									public void handleReply(final int option, final String reply) {
										owner.setBusy(true);
										for(Player informee : owner.getViewArea().getPlayersInView()) {
											informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
										}
										switch(option) {
											case 0:
												trade(npc, owner);
												break;
											case 1:
												whatYouDo(npc, owner);
												break;
										}
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	
	
	
	private final void readBook(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Ok I've read the book", "Do you know where I can find the Phoenix Gang"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"No I don't", "I think I know someone who will though", "Talk to Baraek, the fur trader in the market place", "I've heard he has connections with the Phoenix Gang"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Thanks, I'll try that"}) {
							public void finished() {
								Quest q = owner.getQuest(13);
								if(q != null)
									if(q.getStage() == 1)
										owner.incQuestCompletionStage(13);
								owner.setBusy(false);
								npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
	private final void lookingForThurgo(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"The Imcando Dwarves, you say?", "They were the world's most skilled smiths about a hundred years ago", "They used secret knowledge", "Which they passed down from generation to generation", "Unfortunately about a century ago the once thriving race", "Was wiped out during the last barbarian invasions of that time"}) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"So are there any Imcando left at all?"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"A few of them survived", "But with the bulk of their population destroyed", "Their numbers have dwindled even further", "Last I knew there were a couple living in Asgarnia", "Near the cliffs on the Asgarnian southern peninsula", "They tend to keep to themselves", "They don't tend to tell people that they're the descendants of the Imcando", "Which is why people think that the tribe has died out totally", "you may have more luck talking to them if you bring them some red berry pie", "They really like red berry pie"}) {
							public void finished() {
								owner.incQuestCompletionStage(14);
								owner.setBusy(false);
							}
						});
					}
				});
			}
		});
	}

	private void quest(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"I don't think there's any here", "Let me think actually", "If you look in a book", "called shield of Arrav", "You'll find a quest in there", "I'm not sure where the book is mind you", "I'm sure it's somewhere in here"}) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Thank you"}) {
					public void finished() {
						owner.addQuest(13, 3);
						owner.setBusy(false);
						npc.unblock();
					}
				});
			}
		});
	}

	private void trade(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"No, sorry. I'm not the trading type"}) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Ah well"}) {
					public void finished() {
						owner.setBusy(false);
						npc.unblock();
					}
				});
			}
		});
	}

	private void whatYouDo(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"I'm the palace librarian"}) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Ah that's why you're in the library then"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Yes", "Though I might be in here even if I didn't work here", "I like reading"}) {
							public void finished() {
								owner.setBusy(false);
								npc.unblock();
							}
						});
					}
				});
			}
		});
	}
}