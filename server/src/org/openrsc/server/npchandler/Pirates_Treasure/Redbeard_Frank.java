/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
package org.openrsc.server.npchandler.Pirates_Treasure;

import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.InvItem;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.World;
import org.openrsc.server.npchandler.NpcHandler;
public class Redbeard_Frank implements NpcHandler {

	private void questFinished(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
			public void action() {
				final String[] options1 = {"Arrrh", "Do you want to trade"};
				owner.setBusy(false);
				owner.sendMenu(options1);
				owner.setMenuHandler(new MenuHandler(options1) {
					public void handleReply(final int option, final String reply) {
						owner.setBusy(true);
						for(Player informee : owner.getViewArea().getPlayersInView()) {
							informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
						}
						switch(option) {
							case 0:
								final String[] messages5 = {"Arrrh"};
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages5) {
									public void finished() {
										owner.setBusy(false);
										npc.unblock();
									}
								});
								break;
							case 1:
								final String[] messages6 = {"No, I've got nothing to trade"};
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages6) {
									public void finished() {
										owner.setBusy(false);
										npc.unblock();
									}
								});
								break;
						}
					}
				});
			}
		});
	}

	private void awaitingRum(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Have Ye brought some rum for yer old mate Frank"}) {
			public void finished() {
				if(!owner.getInventory().contains(318)) {
					World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"No not yet"}) {
						public void finished() {
							owner.setBusy(false);
							npc.unblock();
						}
					});								
				} else {
					final String[] messages0 = {"Yes, I've got some"};
					World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages0) {
						public void finished() {
							World.getDelayedEventHandler().add(new SingleEvent(owner, 1000) {
								public void action() {
									owner.sendMessage("Frank happily takes the rum");
									owner.getInventory().remove(new InvItem(318, 1));
									owner.sendInventory();
									final String[] messages1 = {"Now a deals a deal, I'll tell ye about the treasure", "I used to serve under a pirate captain called One Eyed Hector", "Hector was a very successful pirate and became very rich", "but about a year ago we were boarded by the Royal Asgarnian Navy", "Hector was killed along with many of the crew", "I was one of the few to escape", "And I escaped with this"};
									World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages1) {
										public void finished() {
											World.getDelayedEventHandler().add(new SingleEvent(owner, 750) {
												public void action() {
													owner.sendMessage("Frank hands you a key");
													owner.getInventory().add(new InvItem(382, 1));
													owner.sendInventory();
													owner.incQuestCompletionStage(9);
													final String[] messages2 = {"This is Hector's key", "I believe it opens his chest", "In his old room in the blue moon inn in Varrock", "With any luck his treasure will be in there"};
													World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages2) {
														public void finished() {
															World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
																public void action() {
																	final String[] options0 = {"Ok thanks, I'll go and get it", "So why didn't you ever get it?"};
																	owner.setBusy(false);
																	owner.sendMenu(options0);
																	owner.setMenuHandler(new MenuHandler(options0) {
																		public void handleReply(final int option, final String reply) {
																			owner.setBusy(true);
																			for(Player informee : owner.getViewArea().getPlayersInView()) {
																				informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
																			}
																			switch(option) {
																				case 0:
																					owner.setBusy(false);
																					npc.unblock();
																					break;
																				case 1:
																					final String[] messages3 = {"I'm not allowed in the blue moon inn", "Apparently I'm a drunken trouble maker"};
																					World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages3) {
																						public void finished() {
																							owner.setBusy(false);
																							npc.unblock();
																						}
																					});
																					break;
																			}
																		}
																	});
																}
															});
														}
													});
												}
											});
										}
									});
								}
							});
						}
					});
				}
			}
		});
	}
	
	private void lostKey(final Npc npc, final Player owner) {
		final String[] messages7 = {"I seem to have lost my chest key"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages7) {
			public void finished() {
				final String[] messages8 = {"Arrr silly you", "Fortunately I took the precaution to have another one made"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages8) {
					public void finished() {
						World.getDelayedEventHandler().add(new SingleEvent(owner, 500) {
							public void action() {
								owner.sendMessage("Frank hands you a chest key");
								owner.getInventory().add(new InvItem(382, 1));
								owner.sendInventory();
								questFinished(npc, owner);
							}
						});
					}
				});
			}
		});
	}
	
	private void questNotStarted(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
			public void action() {
				final String[] options0 = {"I'm in search of treasure", "Arrrh", "Do you want to trade?"};
				owner.setBusy(false);
				owner.sendMenu(options0);
				owner.setMenuHandler(new MenuHandler(options0) {
					public void handleReply(final int option, final String reply) {
						owner.setBusy(true);
						for(Player informee : owner.getViewArea().getPlayersInView()) {
							informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
						}
						switch(option) {
							case 0:
								final String[] messages1 = {"Arrrh treasure you be after eh?", "Well I might be able to tell you where to find some.", "For a price"};
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages1) {
									public void finished() {
										final String[] messages2 = {"What sort of price?"};
										World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages2) {
											public void finished() {
												final String[] messages3 = {"Well for example if you can get me a bottle of rum", "Not just any rum mind", "I'd like some rum brewed on Karamja island", "There's no rum like KAramja rum"};
												World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages3) {
													public void finished() {
														owner.addQuest(9, 2);
														owner.setBusy(false);
														npc.unblock();
													}
												});
											}
										});
									}
								});
								break;
							case 1:
								final String[] messages4 = {"Arrrh"};
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages4) {
									public void finished() {
										owner.setBusy(false);
										npc.unblock();
									}
								});
								break;
							case 2:
								final String[] messages5 = {"No, I've got nothing to trade"};
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages5) {
									public void finished() {
										owner.setBusy(false);
										npc.unblock();
									}
								});
								break;
						}
					}
				});
			}
		});
	}
	
	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		final Quest q = owner.getQuest(9);
		final String[] messages0 = {"Arrrh Matey"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages0, true) {
			public void finished() {
				if(q != null) {
					if(q.finished()) { //Quest Finished
						questFinished(npc, owner);
					} else {//Quest Underway
						switch(q.getStage()) {
							case 0:
								awaitingRum(npc, owner);
								break;
							case 1:
								if(owner.getInventory().contains(382)) {
									questFinished(npc, owner);
								} else {
									lostKey(npc, owner);
								}
								break;
							case 2:
								questFinished(npc, owner);
								break;
						}
					}
				} else { //Quest not started
					questNotStarted(npc, owner);
				}
			}
		});
	}
}