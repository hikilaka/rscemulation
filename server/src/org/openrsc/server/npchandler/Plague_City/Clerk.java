/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
//npc ID 452
package org.openrsc.server.npchandler.Plague_City;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.World;
import org.openrsc.server.npchandler.NpcHandler;



public class Clerk implements NpcHandler
 {

	public void handleNpc(final Npc npc, final Player owner) throws Exception
	{
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest q = owner.getQuest(35);
		if(q != null) 
		{
			if(q.finished()) 
			{
				finished(npc, owner);
			}
			else 
			{
				switch(q.getStage())
				{
					case 8:
						questStage8(npc, owner);
					break;
					default:
						noQuestStarted(npc, owner);
				}
			}
		} 
		else 
		{
			noQuestStarted(npc, owner);
		}
	}
	
	private void questStage8(final Npc npc, final Player owner)
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello welcome to the civic office of west Ardougne", "How can I help?"}, true)
		{
			public void finished()
			{	
				World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
				{
					public void action()
					{
						final String[] options107 = {"I need permission to enter a plague house", "Who is through that door?", "I'm just looking thanks"};
						owner.setBusy(false);
						owner.sendMenu(options107);
						owner.setMenuHandler(new MenuHandler(options107) 
						{
							public void handleReply(final int option, final String reply)
							{
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView())
								{
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) 
								{
									case 0:
										urgent(npc, owner);
									break;
									case 1:
										whoIsThat(npc, owner);
									break;
									case 2:
										owner.setBusy(false);
										npc.unblock();
									break;
								}
							}
						});
					}
				});	
			}	
		});			
	}
	
	
	private void whoIsThat(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"The city warder Bravek is in there"}) 
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Can I go in?"}) 
				{
					public void finished()
					{
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"He has asked not to be disturbed"}) 
						{
							public void finished()
							{
								World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
								{
									public void action()
									{
										final String[] options107 = {"This is urgent though", "Ok I will leave him alone"};
										owner.setBusy(false);
										owner.sendMenu(options107);
										owner.setMenuHandler(new MenuHandler(options107) 
										{
											public void handleReply(final int option, final String reply)
											{
												owner.setBusy(true);
												for(Player informee : owner.getViewArea().getPlayersInView())
												{
													informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
												}
												switch(option) 
												{
													case 0:
														urgent(npc, owner);
													break;
													case 1:
														owner.setBusy(false);
														npc.unblock();
													break;
												}
											}
										});
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	private void urgent(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Someone's been kidnapped", "and is being held in a plague house"}) 
		{
			public void finished()
			{
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"I'll see what I can do I suppose", "Mr Bravek there's a person here who really needs to speak to you"}) 
				{
					public void finished()
					{
						owner.sendMessage("Bravek unlocks the door from inside");
						owner.incQuestCompletionStage(35);
						owner.setBusy(false);
						npc.unblock();	
					}
				});
			}
		});
	}
	
	private void finished(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
		{
			public void action()
			{
				owner.sendMessage("Clerk is not interested in talking");
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
	private void noQuestStarted(final Npc npc, final Player owner) 
	{
		World.getDelayedEventHandler().add(new SingleEvent(owner, 2000)
		{
			public void action()
			{
				owner.sendMessage("Clerk is not interested in talking");
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
}