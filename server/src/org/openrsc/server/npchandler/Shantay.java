/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
package org.openrsc.server.npchandler;

import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.InvItem;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.World;
public class Shantay implements NpcHandler {
	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		final String[] messages14 = {"Hello Effendi, I am Shantay.", "I see you're new!", "Make sure you read the poster before going into the desert.", "There is a heartbroken Mother just past the gates and in the desert."};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages14, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options8 = {"What is this place?", "Can I see what you have to sell please?", "I must be going."};
						owner.setBusy(false);
						owner.sendMenu(options8);
						owner.setMenuHandler(new MenuHandler(options8) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										whatIs(npc, owner);
										break;
									case 1:
										sell(npc, owner);
										break;
									case 2:
										going(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	private void whatIs(final Npc npc, final Player owner) {
		final String[] messages15 = {"This is the pass of Shantay", "I guard this area with my men.", "I am responsible for keeping this pass open and repaired", "My men and I prevent outlaws from getting out of the desert.", "And we stop the inexperienced from a dry death in the sands.", "Which would you say you were?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages15) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options9 = {"I am definitely an outlaw, prepare to die!", "I am a little inexperienced.", "Er, neither, I'm an adventurer."};
						owner.setBusy(false);
						owner.sendMenu(options9);
						owner.setMenuHandler(new MenuHandler(options9) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										outlaw(npc, owner);
										break;
									case 1:
										inexperienced(npc, owner);
										break;
									case 2:
										neither(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	private void sell(final Npc npc, final Player owner) {
		final String[] messages16 = {"Absolutely Effendi!"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages16) {
			public void finished() {
				//SHOWSHOP
			}
		});
	}
	private void going(final Npc npc, final Player owner) {
		final String[] messages17 = {"So long..."};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages17) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	private void outlaw(final Npc npc, final Player owner) {
		final String[] messages18 = {"Ha, very funny.....", "Guards arrest him!"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages18) {
			public void finished() {
				owner.setShantayPrison(true);
				owner.sendMessage("The guards arrest you and place you in the jail.");
				final String[] messages19 = {"You'll have to stay in there until you pay the fine of five gold pieces.", "Do you want to pay now?"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages19) {
					public void finished() {
						World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
							public void action() {
								final String[] options10 = {"Yes, Ok.", "No thanks, you're not having my money."};
								owner.setBusy(false);
								owner.sendMenu(options10);
								owner.setMenuHandler(new MenuHandler(options10) {
									public void handleReply(final int option, final String reply) {
										owner.setBusy(true);
										for(Player informee : owner.getViewArea().getPlayersInView()) {
											informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
										}
										switch(option) {
											case 0:
												okPayFine(npc, owner);
												break;
											case 1:
												willNotPay(npc, owner);
												break;
										}
									}
								});
							}
						});
					}
				});
			}
		});
	}
	private void inexperienced(final Npc npc, final Player owner) {
		final String[] messages20 = {"Can I recommend that you purchase a full waterskin and a knife!", "These items will no doubt save your life...", "A waterskin will keep water from evaporating in the desert.", "And a keen woodsman with a knife can extract the juice from a cactus.", "Before you go into the desert, it's advisable to wear desert clothes.", "It's very hot in the desert and you'll surely cook if you wear armour.", "To keep the pass open and bandit free we charge a small sum of five gold pieces", "You can buy a desert pass from me, just ask me to open the shop."};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages20) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options11 = {"Can I see what you have to sell please?", "I must be going."};
						owner.setBusy(false);
						owner.sendMenu(options11);
						owner.setMenuHandler(new MenuHandler(options11) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										sell(npc, owner);
										break;
									case 1:
										going(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	private void neither(final Npc npc, final Player owner) {
		final String[] messages21 = {"Great, I have just the thing for the desert adventurer.", "I sell desert clothes which will keep you cool in the heat of the desert.", "I also sell waterskins so that you won't die in the desert.", "A waterskin and a knife help you survive from the juice of a cactus.", "Use the chest to store your items, we'll take them to the bank.", "It's hot in the desert, you'll bake in all that armour.", "To keep the pass open we ask for 5 gold pieces.", "and we give you a Shantay Pass, just ask to see what I sell to buy one."};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages21) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options12 = {"Can I see what you have to sell please?", "I must be going.", "Why do I have to pay to go into the desert?"};
						owner.setBusy(false);
						owner.sendMenu(options12);
						owner.setMenuHandler(new MenuHandler(options12) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										sell(npc, owner);
										break;
									case 1:
										going(npc, owner);
										break;
									case 2:
										whyPay(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	private void whyPay(final Npc npc, final Player owner) {
		owner.sendMessage("Shantay opens his arms wide as if to embrace you.");
		final String[] messages22 = {"Effendi, you insult me!", "I am not interested in making a profit from you!", "I merely seek to cover my expenses in keeping this pass open.", "There is repair work to carry out and also the mens' wages to consider.", "For a paltry sum of 5 gold pieces, I think we offer a great service."};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages22) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options13 = {"Can I see what you have to sell please?", "I must be going."};
						owner.setBusy(false);
						owner.sendMenu(options13);
						owner.setMenuHandler(new MenuHandler(options13) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										sell(npc, owner);
										break;
									case 1:
										going(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	private void okPayFine(final Npc npc, final Player owner) {
		final String[] messages23 = {"Good, I see that you have come to your senses."};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages23) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						owner.sendMessage("You hand over five gold pieces to Shantay.");
						owner.getInventory().remove(new InvItem(10, 5));
						owner.sendInventory();
						final String[] messages24 = {"Great Effendi, now please try to keep the peace."};
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages24) {
							public void finished() {
								World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
									public void action() {
										owner.sendMessage("The assistant unlocks the door to the cell.");
										owner.setBusy(false);
										npc.unblock();
									}
								});
							}
						});
					}
				});
			}
		});
	}
	private void willNotPay(final Npc npc, final Player owner) {
		final String[] messages25 = {"You have a choice.", "You can either pay five gold pieces or...", "You can be transported to a maximum security prison in Port Sarim.", "Will you pay the five gold pieces?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages25) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options14 = {"Yes, Ok.", "No, do your worst!"};
						owner.setBusy(false);
						owner.sendMenu(options14);
						owner.setMenuHandler(new MenuHandler(options14) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										if(owner.getInventory().countId(10) > 5) {
											okPayFine(npc, owner);
										} else {
											noCash(npc, owner);
										}
										break;
									case 1:
										fuckYou(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	private void fuckYou(final Npc npc, final Player owner) {
		final String[] messages26 = {"You are to be transported to a maximum security prison in Port Sarim.", "I hope you've learnt an important lesson from this."};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages26) {
			public void finished() {
				//TELEPORT PLAYER MANUALLY HERE! :D
				owner.teleport(281, 665, false);
				owner.setShantayPrison(false);
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	private void noCash(final Npc npc, final Player owner) {
		final String[] messages27 = {"Good, I see that you have come to your senses.", "You don't have that kind of cash on you I see.", "But perhaps you have some in your bank?", "You can transfer some money from your bank and pay the fine.", "or you will be sent to a maximum security prison in Port Sarim", "Which is it going to be?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages27) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options15 = {"I'll pay the fine.", "I'm not paying the fine!"};
						owner.setBusy(false);
						owner.sendMenu(options15);
						owner.setMenuHandler(new MenuHandler(options15) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										showBank(npc, owner);
										break;
									case 1:
										fuckYou(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	private void showBank(final Npc npc, final Player owner) {
		final String[] messages28 = {"Ok then..., you'll need access to your bank."};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages28) {
			public void finished() {
				owner.setAccessingBank(true);
				owner.showBank();
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
}