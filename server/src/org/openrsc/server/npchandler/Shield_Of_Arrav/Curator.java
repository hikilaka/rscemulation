/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/

package org.openrsc.server.npchandler.Shield_Of_Arrav;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.InvItem;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.World;
import org.openrsc.server.npchandler.NpcHandler;

public class Curator implements NpcHandler {
	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest q = owner.getQuest(13);
		if(q != null) {
			if(q.finished()) {
				noQuest(npc, owner);
			} else {
				if(q.getStage() == 2 || q.getStage() == 3) {
					if(owner.getInventory().countId(53) > 0 && owner.getInventory().countId(54) > 0) {
						giveHalves(npc, owner);
					} else {
						noQuest(npc, owner);
					}
				} else {
					noQuest(npc, owner);
				}
			}
		} else {
			noQuest(npc, owner);
		}
	}
	
	private void giveHalves(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Welcome to the museum of Varrock"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I have retrieved the shield of Arrav and I would like to claim my reward"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"The shield of Arrav?", "Let me see that"}) {
							public void finished() {
								owner.sendMessage("The curator peers at the shield");
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"This is incredible", "That shield has been missing for about twenty five years", "Well give me the shield", "And i'll write you out a certificate", "Saying you have returned the shield", "So you can claim your reward from the king"}) {
									public void finished() {
										World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Can I have two certificates?", "I needed significant help from a friend to get the shield", "We'll split the reward"}) {
											public void finished() {
												World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Oh ok"}) {
													public void finished() {
														owner.incQuestCompletionStage(13);
														owner.sendMessage("You hand over the shield parts");
														owner.getInventory().remove(new InvItem(53, 1));
														owner.getInventory().remove(new InvItem(54, 1));
														owner.sendMessage("The curator writes out two certificates");
														owner.getInventory().add(new InvItem(61,1));
														owner.getInventory().add(new InvItem(61,1));
														owner.sendInventory();
														World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Take these to the king", "and he'll pay you both handsomely"}) {
															public void finished() {
																owner.setBusy(false);
																npc.unblock();
															}
														});
													}
												});
											}
										});
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	private void noQuest(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Welcome to the museum of Varrock"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options0 = {"Have you any interesting news?", "Do you know where I could find any treasure?"};
						owner.setBusy(false);
						owner.sendMenu(options0);
						owner.setMenuHandler(new MenuHandler(options0) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										news(npc, owner);
										break;
									case 1:
										treasure(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}

	private void news(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"No, i'm only interested in old stuff"}) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}

	private void treasure(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"This museum is full of treasures"}) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"No, I meant treasures for me"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Any treasures this museum knows about", "It aquires"}) {
							public void finished() {
								owner.setBusy(false);
								npc.unblock();
							}
						});
					}
				});
			}
		});
	}
}