/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
* 
*/
package org.openrsc.server.npchandler;

import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.InvItem;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.World;

public class SilkTrader implements NpcHandler {
	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		if(npc.getX() > 545) {
			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"I'm not implemented yet...come back later."}, true) {
				public void finished() {
					owner.setBusy(false);
					npc.unblock();
				}
			});
		} else {
			final String[] messages0 = {"Do you want to buy any fine silks?"};
			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages0, true) {
				public void finished() {
					World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
						public void action() {
							final String[] options0 = {"How much are they?", "No. Silk doesn't suit me"};
							owner.setBusy(false);
							owner.sendMenu(options0);
							owner.setMenuHandler(new MenuHandler(options0) {
								public void handleReply(final int option, final String reply) {
									owner.setBusy(true);
									for(Player informee : owner.getViewArea().getPlayersInView()) {
										informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
									}
									switch(option) {
										case 0:
											howMuch(npc, owner);
											break;
										case 1:
											owner.setBusy(false);
											npc.unblock();
											break;
									}
								}
							});
						}
					});
				}
			});
		}
	}
	private void howMuch(final Npc npc, final Player owner) {
		final String[] messages1 = {"3 Coins"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages1) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options1 = {"No. That's too much for me", "OK, that sounds good"};
						owner.setBusy(false);
						owner.sendMenu(options1);
						owner.setMenuHandler(new MenuHandler(options1) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										tooMuch(npc, owner);
										break;
									case 1:
										if(owner.getInventory().countId(10) > 2) {
											World.getDelayedEventHandler().add(new SingleEvent(owner, 1000) {
												public void action() {
													owner.getInventory().remove(new InvItem(10, 3));
													owner.getInventory().add(new InvItem(200, 1));
													owner.sendInventory();
													owner.sendMessage("You buy some silk for 3 coins");
													owner.setBusy(false);
													npc.unblock();
												}
											});
											break;
										} else {
											World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Oh dear. I don't have enough money"}) {
												public void finished() {
													owner.setBusy(false);
													npc.unblock();
												}
											});
										}
								}
							}
						});
					}
				});
			}
		});
	}
	private void tooMuch(final Npc npc, final Player owner) {
		final String[] messages2 = {"Two coins and that's as low as I'll go", "I'm not selling it for any less", "You'll probably go and sell it in Varrock for a profit anyway"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages2) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options2 = {"Two coins sounds good", "No, really. I don't want it"};
						owner.setBusy(false);
						owner.sendMenu(options2);
						owner.setMenuHandler(new MenuHandler(options2) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										if(owner.getInventory().countId(10) > 1) {
											World.getDelayedEventHandler().add(new SingleEvent(owner, 1000) {
												public void action() {
													owner.getInventory().remove(new InvItem(10, 2));
													owner.getInventory().add(new InvItem(200, 1));
													owner.sendInventory();
													owner.sendMessage("You buy some silk for 2 coins");
													owner.setBusy(false);
													npc.unblock();
													
												}
											});
											break;
										} else {
											World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Oh dear. I don't have enough money"}) {
												public void finished() {
													owner.setBusy(false);
													npc.unblock();
												}
											});
										}
										break;
									case 1:
										final String[] messages3 = {"OK, but that's the best price you're going to get"};
										World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages3) {
											public void finished() {
												owner.setBusy(false);
												npc.unblock();
											}
										});
										break;
								}
							}
						});
					}
				});
			}
		});
	}
}