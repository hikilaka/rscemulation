/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
package org.openrsc.server.npchandler.The_Restless_Ghost;

import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.World;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.npchandler.NpcHandler;
public class Priest implements NpcHandler {
	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		final Quest q = owner.getQuest(5);
		if(q != null) {
			if(q.finished()) { //Quest Finished
				notActive(npc, owner, true);
			} else {//Quest Underway
				switch(q.getStage()) {
					case 0: //Didn't find Urhney
						cantFindUrhney(npc, owner);
						break;
					case 1: //Found Urhney
						talkedToUrhney(npc, owner);
						break;
					case 2: //Talk to ghost
					case 3: //Pick up skull
						if(owner.getInventory().contains(412)) {
							hasSkull(npc, owner);
						} else {
							talkedToGhost(npc, owner);
						}
				}
			}
		} else {	//Quest Not Started
			notActive(npc, owner, false);
		}
	}
	
	private void hasSkull(final Npc npc, final Player owner) {
		final String[] messages0 = {"Have you got rid of the ghost yet?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages0, true) {
			public void finished() {
				final String[] messages1 = {"I've finally found the ghost's skull"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages1) {
					public void finished() {
						final String[] messages2 = {"Put it in the ghost's coffin and see what happens!"};
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages2) {
							public void finished() {
								owner.setBusy(false);
								npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
	private void cantFindUrhney(final Npc npc, final Player owner) {
		final String[] messages00 = {"Have you gotten rid of the ghost yet?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages00, true) {
			public void finished() {
				final String[] messages1 = {"I can't find father Urhney at the moment"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages1) {
					public void finished() {
						final String[] messages2 = {"Well to get to the swamp he is in", "you need to go round the back of the castle", "The swamp is on the other side of the fence to the south", "You'll have to go through the woods to the west to get around the fence", "Then you'll have to go right into the eastern depths of the swamp"};
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages2) {
							public void finished() {
								owner.setBusy(false);
								npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
	private void talkedToUrhney(final Npc npc, final Player owner) {
		final String[] messages0 = {"Have you got rid of the ghost yet?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages0, true) {
			public void finished() {
				final String[] messages1 = {"I had a talk with father Urhney", "He has given me this funny amulet to talk to the ghost with"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages1) {
					public void finished() {
						final String[] messages2 = {"I always wondered what that amulet was", "Well I hope it's useful. Tell me if you get rid of the ghost"};
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages2) {
							public void finished() {
								owner.setBusy(false);
								npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
	private void talkedToGhost(final Npc npc, final Player owner) {
		final String[] messages0 = {"Have you got rid of the ghost yet?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages0, true) {
			public void finished() {
				final String[] messages1 = {"I've found out that the ghost's corpse has lost its skull", "If I can find the skull the ghost will go"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages1) {
					public void finished() {
						final String[] messages2 = {"That would explain it", "Well I haven't seen any skulls"};
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages2) {
							public void finished() {
								final String[] messages3 = {"Yes I think a warlock has stolen it"};
								World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages3) {
									public void finished() {
										final String[] messages4 = {"I hate warlocks", "Ah well good luck"};
										World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages4) {
											public void finished() {
												owner.setBusy(false);
												npc.unblock();
											}
										});
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	private void notActive(final Npc npc, final Player owner, final boolean finished) {
			final String[] messages24 = {"Welcome to the church of holy Saradomin"};
			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages24, true) {
				public void finished() {
					World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
						public void action() {
							final String[] options6 = {"Who's Saradomin?", "Nice place you've got here", "I'm looking for a quest"};
							owner.setBusy(false);
							owner.sendMenu(options6);
							owner.setMenuHandler(new MenuHandler(options6) {
								public void handleReply(final int option, final String reply) {
									owner.setBusy(true);
									for(Player informee : owner.getViewArea().getPlayersInView()) {
										informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
									}
									switch(option) {
										case 0:
											final String[] messages1 = {"Surely you have heard of the God, Saradomin?", "He who creates the forces of goodness and purity in this world?", "I cannot believe your ignorance!", "This is the God with more followers than any other!", "At least in these parts!", "He who along with his brothers Guthix and Zamorak created this world"};
											World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages1) {
												public void finished() {
													World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
														public void action() {
															final String[] options1 = {"Oh that Saradomin", "Oh sorry I'm not from this world"};
															owner.setBusy(false);
															owner.sendMenu(options1);
															owner.setMenuHandler(new MenuHandler(options1) {
																public void handleReply(final int option, final String reply) {
																	owner.setBusy(true);
																	for(Player informee : owner.getViewArea().getPlayersInView()) {
																		informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
																	}
																	switch(option) {
																		case 0:
																			final String[] messages2 = {"There is only one Saradomin"};
																			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages2) {
																				public void finished() {
																					owner.setBusy(false);
																					npc.unblock();
																				}
																			});
																			break;
																		case 1:
																			final String[] messages3 = {"That's strange", "I thought things not from this world were all slime and tenticles"};
																			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages3) {
																				public void finished() {
																					World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
																						public void action() {
																							final String[] options2 = {"You don't understand. This is a computer game", "I am - do you like my disguise?"};
																							owner.setBusy(false);
																							owner.sendMenu(options2);
																							owner.setMenuHandler(new MenuHandler(options2) {
																								public void handleReply(final int option, final String reply) {
																									owner.setBusy(true);
																									for(Player informee : owner.getViewArea().getPlayersInView()) {
																										informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
																									}
																									switch(option) {
																										case 0:
																											final String[] messages4 = {"I beg your pardon?"};
																											World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages4) {
																												public void finished() {
																													final String[] messages5 = {"Never mind"};
																													World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages5) {
																														public void finished() {
																															owner.setBusy(false);
																															npc.unblock();
																														}
																													});
																												}
																											});
																											break;
																										case 1:
																											final String[] messages6 = {"Aargh begone foul creature from another dimension"};
																											World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages6) {
																												public void finished() {
																													final String[] messages7 = {"Ok, Ok, it was a joke"};
																													World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages7) {
																														public void finished() {
																															owner.setBusy(false);
																															npc.unblock();
																														}
																													});
																												}
																											});
																											break;
																									}
																								}
																							});
																						}
																					});
																				}
																			});
																			break;
																	}
																}
															});
														}
													});
												}
											});
											break;
										case 1:
											final String[] messages8 = {"It is, isn't it?", "It was built 230 years ago"};
											World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages8) {
												public void finished() {
													owner.setBusy(false);
													npc.unblock();
												}
											});
											break;
										case 2:
											if(finished) {
												World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Sorry I only had one quest"}, true) {
													public void finished() {
														owner.setBusy(false);
														npc.unblock();
													}
												});
											} else {
												final String[] messages25 = {"That's lucky, I need someone to do a quest for me"};
												World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages25) {
													public void finished() {
														final String[] messages26 = {"Ok I'll help"};
														World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages26) {
															public void finished() {
																final String[] messages27 = {"Ok the problem is, there is a ghost in the church graveyard", "I would like you to get rid of it", "If you need any help", "My friend father Urhney is an expert on ghosts", "I believe he is currently living as a hermit", "He has a little shack somewhere in the swamps south of here", "I'm sure if you told him that I sent you he'd be willing to help", "My name is father Aereck by the way", "Be careful going through the swamps", "I have heard they can be quite dangerous"};
																World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages27) {
																	public void finished() {
																		owner.setBusy(false);
																		npc.unblock();
																		owner.addQuest(5, 1);
																	}
																});
															}
														});
													}
												});
											}
											break;
									}
								}
							});
						}
					});
				}
			});	
	}
	
}