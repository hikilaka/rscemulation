/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
package org.openrsc.server.npchandler.The_Vampire_Slayer;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.World;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.npchandler.NpcHandler;
public class Morgan implements NpcHandler {
	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest q = owner.getQuest(15);
		if(q != null) {
			if(q.finished()) {
				questFinished(npc, owner);
			} else {
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"How are you doing with your quest?"}, true) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I'm working on it still"}) {
							public void finished() {
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Please hurry", "Every day we live in fear", "That we will be the vampire's next victim"}) {
									public void finished() {
										owner.setBusy(false);
										npc.unblock();
									}
								});
							}
						});
					}
				});
			}
		} else {
			questNotStarted(npc, owner);
		}
	}
	
	private final void questFinished(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"How are you doing with your quest?"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I have slain the foul creature"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Thank you, thank you", "You will always be a hero in our village"}) {
							public void finished() {
								owner.setBusy(false);
								npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
	private final void questNotStarted(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Please please help us, bold hero"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"What's the problem?"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Our little village has been dreadfully ravaged by an evil vampire", "there's hardly any of us left", "We need someone to get rid of him once and for good"}) {
							public void finished() {
								World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
									public void action() {
										final String[] options1 = {"No. Vampires are scary", "Ok I'm up for an adventure", "I tried fighting him. He wouldn't die"};
										owner.setBusy(false);
										owner.sendMenu(options1);
										owner.setMenuHandler(new MenuHandler(options1) {
											public void handleReply(final int option, final String reply) {
												owner.setBusy(true);
												for(Player informee : owner.getViewArea().getPlayersInView()) {
													informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
												}
												switch(option) {
													case 0:
														vampiresAre(npc, owner);
														break;
													case 1:
														upForAdventure(npc, owner);
														break;
													case 2:
														triedFighting(npc, owner);
														break;
												}
											}
										});
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	private void vampiresAre(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"I don't blame you"}) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	private void upForAdventure(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"I think first you should seek help", "I have a friend who is a retired vampire hunter", "Called Dr. Harlow", "He may be able to give you some tips", "He can normally be found in the Jolly boar inn these days", "He's a bit of an old soak", "Mention his old friend Morgan"}) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I'll look him up then"}) {
					public void finished() {
						owner.addQuest(15, 3);
						owner.setBusy(false);
						npc.unblock();
					}
				});
			}
		});
	}
	private void triedFighting(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"You may be going about it the wrong way", "I think first you should seek help", "I have a friend who is a retired vampire hunter", "Called Dr. Hawlow", "He may be able to give you some tips", "He can normally be found in the Jolly boar in these days", "He's a bit of an old soak", "Mention his old friend Morgan", "I'm sure he wouldn't want me to be killed by a vampire"}) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I'll look him up then"}) {
					public void finished() {
						owner.addQuest(15, 3);
						owner.setBusy(false);
						npc.unblock();
					}
				});
			}
		});
	}
}