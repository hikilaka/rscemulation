/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/

//scripted by Mr. Zain

package org.openrsc.server.npchandler.Tree_Gnome_Village;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.logging.Logger;
import org.openrsc.server.logging.model.eventLog;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.Player;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.World;
import org.openrsc.server.npchandler.NpcHandler;
import org.openrsc.server.util.DataConversions;



public class Bolren implements NpcHandler {

	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest q = owner.getQuest(32);
		if(q != null) {
			if(q.finished()) {
				finished(npc, owner);
			} else {
				switch(q.getStage()) {
					case 0:
						noQuestStarted(npc, owner);
						break;
					case 1:
						questStage1(npc, owner);
						break;
					case 2:
						questStage1(npc, owner);
						break;
					case 3:
						questStage1(npc, owner);
						break;
					case 4:
						questStage1(npc, owner);
						break;
					case 5:
						questStage5(npc, owner);
						break;
					case 6:
						questStage6(npc, owner);
						break;
				}
			}
		} else {
			noQuestStarted(npc, owner);
		}
	}
	

	private void noQuestStarted(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Hello"}, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Well hello stranger", "My name's Bolren, I'm king of the tree gnomes", "I'm surprised you made it in", "Maybe I made the maze too easy"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Maybe"}) {
							public void finished() {
								World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"I'm afraid I have more serious concerns at the moment", "very serious"}) {
									public void finished() {
										World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
											public void action() {
												final String[] options107 = {"I'll leave you to it then", "Can I help at all?"};
												owner.setBusy(false);
												owner.sendMenu(options107);
												owner.setMenuHandler(new MenuHandler(options107) {
													public void handleReply(final int option, final String reply) {
														owner.setBusy(true);
														for(Player informee : owner.getViewArea().getPlayersInView()) {
															informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
														}
														switch(option) {
															case 0:
																owner.setBusy(false);
																npc.unblock();
																break;
															case 1:
																questInfo(npc, owner);
																break;
														}
													}
												});
											}
										});
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	
	private void questInfo(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"I'm glad you asked", "The truth is my people are in grave danger", "We have always been protected by the spirit tree", "no creature dark of heart can harm us", "while it's three orbs are in place", "We are not a violent race", "but we fight when we must", "many gnomes have fallen", "battling the dark forces of khazard to the north", "we became desperate", "so we took one orb of protection to the battlefield", "It was a foolish move", "Khazard troops siezed the orb", "and now we are completely defenseless"}) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"How can I help?"}) {
					public void finished() {
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"You would be a huge benefit on the battlefield", "if you would go there and try to retrieve the orb", "my people and I will be forever grateful"}) {
							public void finished() {
								World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
									public void action() {
										final String[] options107 = {"I would be glad to help", "I'm sorry but I won't be involved"};
										owner.setBusy(false);
										owner.sendMenu(options107);
										owner.setMenuHandler(new MenuHandler(options107) {
											public void handleReply(final int option, final String reply) {
												owner.setBusy(true);
												for(Player informee : owner.getViewArea().getPlayersInView()) {
													informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
												}
												switch(option) {
													case 0:
														questAccepted(npc, owner);
														break;
													case 1:
														owner.setBusy(false);
														npc.unblock();
														break;
												}
											}
										});
									}
								});
							}
						});
					}
				});
			}
		});
	}
	
	private void questAccepted(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Thank you", "The battlefield is to the north of the maze", "Command Montai will inform you of their current situation", "that's if he's still alive", "My assistant shall guide you out", "Try your best to return the orb", "Good luck friend"}) {
			public void finished() {
			owner.addQuest(32, 2);
			owner.incQuestCompletionStage(32);
			owner.teleport(624, 675, false);
			owner.sendMessage("A gnome guides you out of the maze");
			owner.setBusy(false);
			npc.unblock();
			}
		});
	}
	
	private void questStage1(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Go meet our commander Mondai at the battlefield north of the maze", "My assistant will guide you out"}) {
			public void finished() {
			owner.teleport(624, 675, false);
			owner.sendMessage("A gnome guides you out of the maze");
			owner.setBusy(false);
			npc.unblock();
			}
		});
	}
	
	private void questStage5(final Npc npc, final Player owner) {
		if(owner.getInventory().countId(740) < 1) {
			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello friend", "do you have the orb yet?"}, true) {
				public void finished() {
					World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Not yet Bolren"}) {
						public void finished() {
							World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Please make haste friend", "Our lives are in danger", "Go meet our commander Mondai at the battlefield north of the maze", "My assistant will guide you out"}) {
								public void finished() {
								owner.teleport(624, 675, false);
								owner.sendMessage("A gnome guides you out of the maze");
								owner.setBusy(false);
								npc.unblock();
								}
							});	
						}
					});	
				}
			});
		}
		else
		if(owner.getInventory().countId(740) > 0) {
			World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"King Bolren are you ok?", "I have the orb"}, true) {
				public void finished() {
					World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Thank you traveller, but it's too late", "we're all doomed", "oh my the misery, the horror"}) {
						public void finished() {
							World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"What happened?"}) {
								public void finished() {
									World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"They came in the night", "I don't know how many."}) {
										public void finished() {
											World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"who?"}) {
												public void finished() {
													World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Khazard troops", "They slaughtered anyone who got in their way", "Women, children, my wife"}) {
														public void finished() {
															World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I'm sorry"}) {
																public void finished() {
																	World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"They took the other orbs", "Now we're defenceless"}) {
																		public void finished() {
																			World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Where did they take them?"}) {
																				public void finished() {
																					World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"They headed north of the battlefields", "To the dead valleys", "A warlord carries the orbs"}) {
																						public void finished() {
																							World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
																								public void action() {
																									final String[] options107 = {"I will find the warlord and bring back the orbs", "I'm sorry but I can't help"};
																									owner.setBusy(false);
																									owner.sendMenu(options107);
																									owner.setMenuHandler(new MenuHandler(options107) {
																										public void handleReply(final int option, final String reply) {
																											owner.setBusy(true);
																											for(Player informee : owner.getViewArea().getPlayersInView()) {
																												informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
																											}
																											switch(option) {
																												case 0:
																													questStage6Accepted(npc, owner);
																													break;
																												case 1:
																													owner.setBusy(false);
																													npc.unblock();
																													break;
																											}
																										}
																									});
																								}
																							});
																						}
																					});
																				}
																			});
																		}
																	});
																}
															});
														}
													});
												}
											});
										}
									});
								}
							});
						}
					});
				}
			});
		}
	}
	
	private void questStage6Accepted(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"You are brave", "But this task will be tough even for you","I wish you the best of luck traveller", "Once again you are our only hope", "I will safeguard this orb", "My assistant will guide you out"}) {
			public void finished() {
				owner.getInventory().remove(740, 1);
				owner.sendInventory();
				owner.incQuestCompletionStage(32);
				owner.teleport(624, 675, false);
				owner.sendMessage("A gnome guides you out of the maze");
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
	private void questStage6(final Npc npc, final Player owner) {
		if(owner.getInventory().countId(741) < 1) {
			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"What are you doing here hero?", "Go collect the orbs from the warlord before all is lost", "My assistant will guide you out"}, true) {
				public void finished() {
				owner.teleport(624, 675, false);
				owner.sendMessage("A gnome guides you out of the maze");
				owner.setBusy(false);
				npc.unblock();
				}
			});	
		}
		else
		if(owner.getInventory().countId(741) > 0) {
			World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Bolren, I have returned"}, true) {
				public void finished() {
					World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"You made it back", "Do you have the orbs?"}) {
						public void finished() {
							World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I have them here"}) {
								public void finished() {
									World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"hooray, you're amazing", "I didn't think it was possible", "But you've saved us", "Once the orbs are replaced we will be safe once more", "Come with me and we shall begin the ceremony"}) {
										public void finished() {
											World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"What now?"}) {
												public void finished() {
													World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"The spirit tree has looked over us for centuries", "Now we must pay our respects"}) {
														public void finished() {
															owner.sendMessage("Bolren takes the orbs");
															owner.sendMessage("The gnomes begin to chant: Su tana, en tania");
															owner.sendMessage("They continue to chant");
															owner.sendMessage("As the king gnome climbs the tree");
															owner.sendMessage("Placing the two orbs at the peak of the spirit tree");
															World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Now at last my people are safe once more", "and can live in peace"}) {
																public void finished() {
																	World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"I'm pleased I could help"}) {
																		public void finished() {
																			World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"You are modest brave traveller", "Please for your efforts take this amulet", "It's made from the same sacred stone as the orbs of protection", "It will help keep you safe on your journeys"}) {
																				public void finished() {
																					World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Thank you king Bolren"}) {
																						public void finished() {
																							World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"The tree has many other powers", "Some of which I cannot reveal", "However as a friend of the gnome people", "You can now use the tree's magic to teleport", "To other trees grown from related seeds"}) {
																								public void finished() {
																								owner.finishQuest(32);
																								owner.getInventory().remove(741, 1);
																								owner.getInventory().add(744, 1);
																								owner.incQuestExp(0, 11450);
																								owner.sendStat(0);
																								owner.sendInventory();
																								owner.sendMessage("@gre@You have completed the Tree Gnome village quest!");
																								owner.sendMessage("@gre@You have been awarded 2 quest points!");
																								owner.setBusy(false);
																								npc.unblock();
																								Logger.log(new eventLog(owner.getUsernameHash(), owner.getAccount(), owner.getIP(), DataConversions.getTimeStamp(), "<strong>" + owner.getUsername() + "</strong>" + " has completed the <span class=\"recent_quest\">Tree Gnome Village</span> quest!"));
																								}
																							});		
																						}
																					});
																				}
																			});
																		}
																	});
																}
															});	
														}
													});
												}
											});
										}
									});
								}
							});
						}
					});
				}
			});
		}
	}
	
	private void finished(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Hello again", "thank you for your help"}) {
			public void finished() {
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[] {"Anytime Bolren"}) {
					public void finished() {
					owner.setBusy(false);
					npc.unblock();
					}
				});
			}
		});
	}
	
}