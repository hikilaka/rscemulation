/**
* Generated By NPCScript :: A scripting engine created for openrsc by Zilent
*/
package org.openrsc.server.npchandler;

import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.Quest;
import org.openrsc.server.model.Npc;
import org.openrsc.server.model.ChatMessage;
import org.openrsc.server.model.InvItem;
import org.openrsc.server.model.MenuHandler;
import org.openrsc.server.model.World;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.model.Player;
import org.openrsc.server.npchandler.NpcHandler;
public class Witch implements NpcHandler {
	public void handleNpc(final Npc npc, final Player owner) throws Exception {
		npc.blockedBy(owner);
		owner.setBusy(true);
		Quest q = owner.getQuest(16);
		if(q != null) {
			if(q.finished()) {
				questFinished(npc, owner);
			} else {
				switch(q.getStage()) {
					case 0:
						haveYouFound(npc, owner);
						break;
					case 1:
						drinkPotion(npc, owner);
						break;
				}
			}
		} else {
			questNotStarted(npc, owner);
		}
	}
	
	private void questFinished(final Npc npc, final Player owner) {
		final String[] messages4 = {"Greetings traveller", "How's your magic coming along?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages4, true) {
			public void finished() {
				final String[] messages5 = {"I'm practising slowly and getting better"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages5) {
					public void finished() {
						final String[] messages6 = {"Good good"};
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages6) {
							public void finished() {
								owner.setBusy(false);
								npc.unblock();
							}
						});
					}
				});
			}
		});
	}
	
	private void drinkPotion(final Npc npc, final Player owner) {
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[] {"Greetings traveller", "Well are you going to drink the potion or not?"}, true) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
	private void haveYouFound(final Npc npc, final Player owner) {
		final String[] messages5 = {"So have you found the things for the potion"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages5, true) {
			public void finished() {
				if(owner.getInventory().contains(270) && owner.getInventory().contains(271) && owner.getInventory().contains(134) && owner.getInventory().contains(241)) {
					final String[] messages1 = {"Yes i have everything"};
					World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages1) {
						public void finished() {
							final String[] messages2 = {"Excellent, can i have them then?"};
							World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages2) {
								public void finished() {
									World.getDelayedEventHandler().add(new SingleEvent(owner, 1000) {
										public void action() {
											owner.sendMessage("You pass the ingredients to Hetty");
											owner.getInventory().remove(new InvItem(270, 1));
											owner.getInventory().remove(new InvItem(271, 1));
											owner.getInventory().remove(new InvItem(134, 1));
											owner.getInventory().remove(new InvItem(241, 1));
											owner.sendInventory();
											World.getDelayedEventHandler().add(new SingleEvent(owner, 1000) {
												public void action() {
													owner.sendMessage("Hetty puts all the ingredients in her cauldron");
													World.getDelayedEventHandler().add(new SingleEvent(owner, 1000) {
														public void action() {
															owner.sendMessage("Hetty closes her eyes and begins to chant");
															World.getDelayedEventHandler().add(new SingleEvent(owner, 1000) {
																public void action() {
																	final String[] messages3 = {"Ok drink from the cauldron"};
																	World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages3) {
																		public void finished() {
																			owner.incQuestCompletionStage(16);
																			owner.setBusy(false);
																			npc.unblock();
																		}
																	});
																}
															});
														}
													});
												}
											});
										}
									});
								}
							});
						}
					});
				} else {
					final String[] messages6 = {"No, not yet"};
					World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages6) {
						public void finished() {
							final String[] messages7 = {"Well remember you need to get", "An eye of newt, a rat's tail, some burnt meat and an onion"};
							World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages7) {
								public void finished() {
									owner.setBusy(false);
									npc.unblock();
								}
							});
						}
					});				
				}				

			}
		});
	}
	
	private void darkSide(final Npc npc, final Player owner) {
		final String[] messages2 = {"Ok i'm going to make a potion to help bring out your darker self", "So that you can perform acts of dark magic with greater ease", "You will need certain ingredients"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages2) {
			public void finished() {
				final String[] messages3 = {"What do I need?"};
				World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, messages3) {
					public void finished() {
						final String[] messages4 = {"You need an eye of newt, a rat's rail, an onion and a piece of burnt meat"};
						World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages4) {
							public void finished() {
								owner.setBusy(false);
								npc.unblock();
								owner.addQuest(16, 1);
							}
						});
					}
				});
			}
		});
	}
	
	private void suitYourself(final Npc npc, final Player owner) {
		final String[] messages8 = {"Suit yourself but you're missing out"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages8) {
			public void finished() {
				owner.setBusy(false);
				npc.unblock();
			}
		});
	}
	
	private void improveMagic(final Npc npc, final Player owner) {
		final String[] messages9 = {"Yes improve your magic", "Do you have no sense of drama?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages9) {
			public void finished() {
							World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options = {"Yes, I'd like to improve my magic", "No, I'm not interested", "Show me the mysteries of the dark arts"};
						owner.setBusy(false);
						owner.sendMenu(options);
						owner.setMenuHandler(new MenuHandler(options) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										World.getDelayedEventHandler().add(new SingleEvent(owner, 1000) {
											public void action() {
												owner.sendMessage("The witch sighs");									
												darkSide(npc, owner);
											}
										});
										break;
									case 1:
										suitYourself(npc, owner);
										break;
									case 2:
										darkSide(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private void searchQuest(final Npc npc, final Player owner) {
		final String[] messages1 = {"Hmm maybe i can think of something for you", "Would you like to become more proficient in the dark arts?"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages1) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options1 = {"Yes help me become one with my darker side", "No i have my principles and honour", "What you mean improve my magic?"};
						owner.setBusy(false);
						owner.sendMenu(options1);
						owner.setMenuHandler(new MenuHandler(options1) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										darkSide(npc, owner);
										break;
									case 1:
										suitYourself(npc, owner);
										break;
									case 2:
										improveMagic(npc, owner);
										break;
								}
							}
						});
					}
				});
			}
		});
	}
	
	private void questNotStarted(final Npc npc, final Player owner) {
		final String[] messages0 = {"greetings traveller", "what would you want with an old woman like me"};
		World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages0, true) {
			public void finished() {
				World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
					public void action() {
						final String[] options0 = {"I am in search of a quest", "I heard you was a witch"};
						owner.setBusy(false);
						owner.sendMenu(options0);
						owner.setMenuHandler(new MenuHandler(options0) {
							public void handleReply(final int option, final String reply) {
								owner.setBusy(true);
								for(Player informee : owner.getViewArea().getPlayersInView()) {
									informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
								}
								switch(option) {
									case 0:
										searchQuest(npc, owner);
										break;
									case 1:
										final String[] messages10 = {"Yes it does seem to be getting fairly common knowledge", "I fear i may get a visit from the witch hunters of Falador before long"};
										World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages10) {
											public void finished() {
												owner.setBusy(false);
												npc.unblock();
											}
										});
										break;
								}
							}
						});
					}
				});
			}
		});	
	}

}